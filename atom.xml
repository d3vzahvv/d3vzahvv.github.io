<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wushuo.me</id>
    <title>Shuo</title>
    <updated>2024-08-27T08:12:46.724Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wushuo.me"/>
    <link rel="self" href="https://wushuo.me/atom.xml"/>
    <subtitle>我的故事写不进作文</subtitle>
    <logo>https://wushuo.me/images/avatar.png</logo>
    <icon>https://wushuo.me/favicon.ico</icon>
    <rights>All rights reserved 2024, Shuo</rights>
    <entry>
        <title type="html"><![CDATA[字幕和字体子集化]]></title>
        <id>https://wushuo.me/post/subtitle/</id>
        <link href="https://wushuo.me/post/subtitle/">
        </link>
        <updated>2024-08-24T13:20:07.000Z</updated>
        <summary type="html"><![CDATA[<p>本文简单地介绍了常见媒体字幕的形式，以及字体子集化在跨平台媒体播放里的作用</p>
]]></summary>
        <content type="html"><![CDATA[<p>本文简单地介绍了常见媒体字幕的形式，以及字体子集化在跨平台媒体播放里的作用</p>
<!-- more -->
<h3 id="字幕格式">字幕格式</h3>
<p>字幕（Subtitle）作为辅助观影的工具，广泛存在于我们身边。下面介绍几种<strong>本地媒体</strong>中常见的字幕格式及其特点：</p>
<p>它们分别是 <code>.sub</code>、<code>.srt</code>、<code>.ass</code>、<code>.pgs</code> 格式的字幕</p>
<p><strong>SUB</strong> 格式的字幕常用于 DVD 中，这里不过多介绍，只需要了解 SUB 格式的字幕显示的是实际的文本字幕，而并非图片字幕</p>
<p><strong>SRT</strong> 格式（Subripper）是最简单的文本字幕格式，扩展名为.srt，其组成为：一行字幕序号，一行时间代码，一行字幕数据<br>
如：</p>
<pre><code class="language-bash">45
00:02:52,184 --&gt; 00:02:53,617
慢慢来
</code></pre>
<p>这表示：第45个字幕，显示时间从该影片开始的第2分52.184秒到第2分53.617秒，内容为“慢慢来”<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><br>
SRT 格式作为最简单的文本字幕，得到了广泛的应用，相比于 ASS 格式兼容性更佳，绝大多数媒体播放器都支持 SRT 格式</p>
<p><strong>ASS</strong> 格式（Advanced SubStation Alpha）采用 SSA V4+ 脚本语言编写，可以实现更高级的字幕效果，比如自定义字体大小，样式；实现字幕渐入渐出；和卡拉 OK 一样的字幕颜色加载等等<br>
ASS 字幕一般在头部定义需要使用到的字幕的字体样式，例如定义字幕样式 <code>Default</code> 并在后续时间轴中调用该格式<br>
ASS 格式可以高度自定义，显示效果出众，成为了不少字幕组的选择；但并非所有播放器都能很好的支持；也会遇到缺失字体而导致字幕不协调的问题</p>
<p><strong>PGS</strong> 格式（Presentation Graphic Stream）字幕一般用于成熟的电影行业，是一种将图片字幕单独分离出来的格式。这种格式的好处在于不会对原片造成损失，分离的形式使不同语言的字幕可以切换，图片流形式又可以保证在不同播放器上的兼容性，无需依赖字体</p>
<h3 id="字幕加载形式">字幕加载形式</h3>
<p>字幕文件有不同的存在形式：</p>
<p><strong>内嵌字幕</strong>又叫烧录字幕，国内流媒体视频网站中的字幕大多是内嵌字幕，它的原理是将字幕字体烧录到视频上，使字体成为视频的像素点。这种烧录是有损的，会使原视频被字幕遮挡的部分损失<br>
当然，由于字幕和视频转化为了“新的包含字幕的视频”，新视频不存在兼容性问题，播放器在播放时无需调用字幕，只需要播放新视频即可</p>
<p><strong>内封字幕</strong>是指将上述介绍的字幕格式文件封装在视频文件中，字幕和视频只有一个文件（如 <code>video.mkv</code> ），字幕是独立于视频存在的。内封字幕视频的字幕文件可以被简单地提取出来，也可以对字幕修改后重新封装回原视频</p>
<p><strong>外挂字幕</strong>是指字幕文件独立于视频文件，在播放时由播放器挂载到视频上。如同一级目录下包含 <code>video.mkv</code>、<code>subtitle.ass</code> 格式的文件。外挂字幕便于修改，但需要播放器支持挂载字幕</p>
<h3 id="字幕字体子集化">字幕字体子集化</h3>
<p>字体文件通常包含了所有的<strong>字符</strong>字体，这使得字体文件较大，<strong>字体子集化</strong>可以将需要使用的<strong>字符的字体</strong>单独提取出来，以供调用</p>
<p>这非常容易理解，我们不妨打个比方：<br>
您需要前往后院拧紧栅栏上的螺丝，栅栏上有十字螺丝和梅花螺丝，于是你从工具箱拿了一把十字螺丝刀和梅花螺丝刀，并前往后院修理螺丝<br>
在这个例子里，工具箱就是字体文件，而十字螺丝刀和梅花螺丝刀就是我们字体子集化后的文件，我们需要多少字符的字体，就子集化多少字符的字体，因为这样可以节省空间</p>
<p>相信聪明的你已经理解了什么是字体子集化，我们在上文提及到</p>
<blockquote>
<p>ASS 格式可以高度自定义，显示效果出众，成为了不少字幕组的选择<br>
ASS 格式的字幕会遇到缺失字体而导致字幕不协调的问题</p>
</blockquote>
<p>缺失的字体在电脑端可以通过安装对应字体文件解决，但对于移动设备（例如封闭的 iOS）、电视设备，安装每一种对应的字体文件几乎不太现实</p>
<p>于是为了以一种通用的方法解决观影过程中字体缺失造成的问题，我们将字体子集化引入到 <code>.ass</code> 文件中，使得任何可以支持 <code>.ass</code> 字幕的播放设备都可以正确地显示字幕效果而无需安装额外的字体文件；同时，对于透过串流在不同设备播放媒体时，每一个设备都可以正确的显示相同的字幕效果，可谓一劳永逸</p>
<p>我们来看看字体子集化后的字幕文件开头</p>
<pre><code class="language-text">fontname: 方正正准黑_GBK[0]_subset_0.ttf
!!%!!!!2!1!!&quot;!!12V.61CPR,(]!!!*5!!!!IE^4,T*..F:&amp;!!!&quot;`!!!!&amp;:D&lt;7&amp;Q,5(\&amp;!!!*UQ!!&quot;&lt;-
9X:U)!!6!!!!!!%=!!!!!G:Q:WVF[3#:!!!#_!!!!;&amp;H98.Q!&quot;]!#1!!!3Q!!!!1:WRZ:LUG#2-!!$Y9
!!,B&gt;'BF974Y)7I-!!!&quot;R!!!!$:I;'6B!@-&quot;*Q!!!8Q!!!!E;'VU?'&quot;1*^M!!![1!!!)PGRP9W%&amp;@\QQ
!!!85!!!$`RN98BQ&quot;DQ#O1!!!4Q!!!!A&lt;G&amp;N:5X&gt;H6M!!!3=!!!&quot;^(&quot;P=X4`P1!-!!!&quot;8!!!!#&quot;Q=G6Q
+!)$01!!!3!!!!!-&gt;GBF91'$!)%!!!'A!!!!*(:N&gt;(AI0S?R!!!'E!!!&quot;`Y!&amp;1!!O!!#+\A&quot;`Y7Y!!'.
!!!!!Q!)!!)!'!!&quot;``]!!Q!&quot;!!!$`A%7!$%!!!!!!!)!!!!!!!Q!!!)!!;%!!!!!!!-!!!!!!!$`OA!-
</code></pre>
<p>第二行后的乱码内容都是描述字体子集化后的字体文件，这样我们便将需要使用的字体文件写入到字幕文件中了</p>
<p>Infuse 中的效果如下图<br>
<img src="https://wushuo.me/post-images/1724513195959.jpg" alt="" loading="lazy"><br>
可以发现字幕的颜色、字体都显示正确，没有出现回落到默认字体的情况</p>
<p>字幕子集化工具有 MkvAutoSubset 和一些其他的 GUI 工具，都可以很方便的将字幕字体子集化</p>
<p>注释：</p>
<ol>
<li>摘自维基百科</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[生活]]></title>
        <id>https://wushuo.me/post/seikatsu/</id>
        <link href="https://wushuo.me/post/seikatsu/">
        </link>
        <updated>2024-05-21T06:12:22.000Z</updated>
        <summary type="html"><![CDATA[<p>文章标题的《生活》来自 ハローモンテスキュ 的专辑名称，日语发音为 せいかつ / seikatsu；文章末尾附有这支专辑的流媒体平台的超链接</p>
]]></summary>
        <content type="html"><![CDATA[<p>文章标题的《生活》来自 ハローモンテスキュ 的专辑名称，日语发音为 せいかつ / seikatsu；文章末尾附有这支专辑的流媒体平台的超链接</p>
<!-- more -->
<p>最近在写研究计划书，英文缩写为 RP，然而我一直不清楚到底是 Research Proposal （研究提案）还是 Research Plan （研究计划）；我当然更倾向于前者，一方面 Proposal 这个词听起来更高级，另一方面异想天开的两页 PDF 文档根本称不上计划。RP 一词放到国内应当翻译为开题报告比较贴切，只是 RP 是作为申请材料提交的一部分，和实际的研究内容不是强相关的</p>
<p>本科的时候不喜欢 ML 相关的东西，也没有过多接触火热的 AI；如今到了研究计划书里，却要加入一大堆各种神经网络模型论文的引用。只能说，这是为了生活。不过好在 RP 的方向可以自己选择，撇开神经网络，还有一些自己感兴趣的朴素的媒体处理可以写，也算没有白学信号处理这些课</p>
<p>比起晦涩难懂的受限玻尔兹曼机，上班儿生活显然更加无聊；在没啥研发内容的研发岗上班，短短几天我就理解到上班的意义就是<strong>挣钱</strong>，学习行业内的业务能力只不过是初入职场的安慰剂，升职加薪更是领导的大饼。在公司里当个小研发员，换来的是：在人挤人的调休节假日晒出来的精美朋友圈</p>
<p>上班的一小段日子里，每天在工位上摸鱼，心情好去帮高级工程师调试板子，每天 3 小时的通勤。即使我从来不在意 Leader 和办公室其他人的目光 5:30 到点就走人，回到家依然累得倒头就睡。我发现在这种上班氛围里，我失去了对我喜爱的东西的热情，我没有时间骑车，也没有时间看硬件，我的英语和日语完全没办法继续练习。</p>
<p>之后我辞了职，拿了 N2 的证书，穷玩了长三角的城市，备考托福托业，学数学</p>
<p>当我听到在外企上班的朋友说，她有时候需要 24 小时 standby，我一点也不羡慕她的双休和薪资了</p>
<p>在家躺平被老中社会视为一种罪恶，特别是之前麻木的工作赚的钱也不少，主要原因是除了交通费以外没有其他开支。但沉湎在麻木的工作里让我感到害怕，我很害怕让我失去重新开始<strong>追逐目标的勇气</strong>和继续学习的能力</p>
<p>因此尽管有家里人的压力（集中于学习方面而不是宅家躺平方面）和浪费的快一年时间，我显然想要有更多机会，即使这些机会最后没有转化为结果，我也并不后悔。我备考托福的时间是备考托业考试的几十倍，托福并没有考到想要的分数，之后草草报名了托业，卷子甚至有 1/8 来不及写，依然拿了能用的分数。不可否认托业这种野鸡考试对比托福有些高攀了，但是回想复习托福的那段经历，对托业一定是有帮助的。</p>
<p>英语考试的努力都不会白白浪费，更何况是在家躺平的挣扎的生活</p>
<p>附言：<br>
这篇文章动笔之前想的很多，动笔之后写得断断续续；可能我写不出任何有深度的东西了，写得完全是流水账。如果您可以看完，我会十分感谢（笑）</p>
<p>生活　ー　ハローモンテスキュー</p>
<ul>
<li>Apple Music <a href="https://music.apple.com/cn/album/%E7%94%9F%E6%B4%BB/1479017557">专辑链接</a></li>
<li>Spotify <a href="https://open.spotify.com/album/6R27I6rHkULBNFW1ehbELy">专辑链接</a></li>
<li>Youtube <a href="https://www.youtube.com/watch?v=7Nx9Of0dtLo&amp;list=OLAK5uy_m87lLS-zKxnz82gej5S4uL5Hwn-yEN_Kg">专辑合集</a></li>
<li>QQ 音乐 <a href="https://y.qq.com/n/ryqq/albumDetail/001YYpjP0ehJYR">专辑链接</a></li>
<li>网易云音乐 <a href="https://music.163.com/#/album?id=191155054">专辑链接</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[新年旧札]]></title>
        <id>https://wushuo.me/post/genealogy/</id>
        <link href="https://wushuo.me/post/genealogy/">
        </link>
        <updated>2023-02-01T11:18:50.000Z</updated>
        <summary type="html"><![CDATA[<p>过年回我爷爷奶奶家所闻</p>
]]></summary>
        <content type="html"><![CDATA[<p>过年回我爷爷奶奶家所闻</p>
<!-- more -->
<p>我奶奶告诉我她的一只眼睛是被她妈妈不小心打瞎的，嫁不出去（寻不到好人家）于是嫁给我了我爷爷</p>
<p>我奶奶的妈妈（太奶奶）是红军的弃婴，出生在安徽郎溪。后来亲生父亲来接她回北京，她没认她父亲自然也没有去北京，后来嫁给了安徽郎溪的一个当地大户人家（也就是我奶奶的生理学父亲<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span>）作小妾，生下了我奶奶</p>
<p>后来太奶奶被赶出家门（原因不知），带着我奶奶从<strong>安徽郎溪</strong>一路要饭到<strong>浙江长兴泗安</strong>，在这里带着我奶奶<a href="https://baike.baidu.com/item/%E6%94%B9%E5%AB%81/5131032">改嫁</a>，于是我奶奶就有了新的父亲<br>
<img src="https://wushuo.me/post-images/1675252904078.jpg" alt="" loading="lazy"></p>
<p>和我奶奶比起来，我爷爷则更像是土著浙江人，因为他家族的移民要追溯到清末年间的河南信阳下江南移民<br>
我 爷爷的爷爷（高祖父）被放在箩筐里，从<strong>河南光山</strong>挑在箩筐里移民到<strong>浙江长兴</strong>，从此在这里定居。因此，我爷爷在浙江长兴出生，讲的却不是吴语片区的方言（长兴话），而是河南官话（准确来说是河南光山方言）</p>
<p>我爷爷奶奶的村里，几乎讲的都是“河南话”，这是由于整个村里都是从河南移民而来的人<br>
近年来，住在主城区周边的村落的河南移民后代也都进入主城区发展，主城区内的吴语方言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>和河南话也由原来的吴语方言主导转变为两种方言通用</p>
<p><strong>依我浅薄的买菜经验，绝大多数卖菜的老板，超市的员工，都会听说两种方言</strong></p>
<p>这里有一篇来自河南罗山县人民政府政协撰写的<a href="http://www.luoshan.gov.cn/news.php?cid=8&amp;id=4221">《一担箩筐下江南的历史正剧——信阳地区清朝末年移民苏浙皖环太湖历史考察记略》</a><br>
一言以蔽之，清末<a href="https://baike.baidu.com/item/%E5%A4%AA%E5%B9%B3%E5%A4%A9%E5%9B%BD%E8%BF%90%E5%8A%A8/472841"><strong>太平天国运动</strong></a>导致江浙皖环太湖地区人口锐减（有关这方面的研究甚多），来自河南的人口迁移到环太湖地区，我爷爷就是其中的后代<br>
<img src="https://wushuo.me/post-images/1675254580950.jpg" alt="" loading="lazy"></p>
<p>如果说移民有什么影响，那么大道理想当然一大堆。但清末那次移民，还是给了我的<strong>小学生活</strong>带来了很多不愉快</p>
<p>我的小学就读在主城区的小区内，又是以 No. 数字命名的公立小学。老师，同学们在非授课时间说的都是吴语方言；老师在上课骂人时也用的是我听不懂的吴语方言，这也导致我对吴语方言的学习非常抵触，到现在为止能听懂大部分当地的吴语方言，杭州话，上海话等等，会说的也只有那几句骂人的话。我真心认为我就读的那所小学的教师素质无法匹配上它 “XX 县第 X 小学” 的名字，所有人对校园霸凌熟视无睹，老师也可以随便打小学生</p>
<p>公立初中（依旧是城区），明显感觉到教师素质提高一节，老师几乎很少骂人，没有动手打人的习惯，身边也几乎很少有说吴语方言的同学了</p>
<p>上了高中，从乡镇上考来的同学多了，移民后代讲河南方言的同学多了起来，班上甚至有一半以上的同学都会说河南方言（我觉得也可能是和时间推移人口流动有关）</p>
<p>有次在北京打车，碰到个河南的大哥他说的话我听得懂，我就跟他说我家乡河南方言。他问我哪里的，我说浙江，慢慢跟他解释移民的事</p>
<p>注释：</p>
<ol>
<li>生理学父亲：使用这个词语的立场没有任何性别倾向</li>
<li>吴语方言：这里的吴语方言特指浙江省湖州市（太湖沿岸片区）的吴语方言</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[静默 / 进路]]></title>
        <id>https://wushuo.me/post/lockdownAndFuture/</id>
        <link href="https://wushuo.me/post/lockdownAndFuture/">
        </link>
        <updated>2022-10-25T16:17:05.000Z</updated>
        <summary type="html"><![CDATA[<p>从 2022 年寒假到 2022 年 11 月，我一直在浙江；这期间发生了许多改变我原先想法的事：上海封城，亲人离世，浅入不同的文化，结识不同的朋友。时间流逝地飞快，把我抛在原地；庆幸的是在这段摆脱了喧哗的静默里，我可以陪家人一起，自由地吸着小城里弥漫着夏天味道的空气</p>
]]></summary>
        <content type="html"><![CDATA[<p>从 2022 年寒假到 2022 年 11 月，我一直在浙江；这期间发生了许多改变我原先想法的事：上海封城，亲人离世，浅入不同的文化，结识不同的朋友。时间流逝地飞快，把我抛在原地；庆幸的是在这段摆脱了喧哗的静默里，我可以陪家人一起，自由地吸着小城里弥漫着夏天味道的空气</p>
<!-- more -->
<p>大约是 2022 年 2 月底，上海封城<br>
亲戚的小区被封了，五十多岁的阿姨在微信群里哭起来。我们这些外地人和江北人只能望着上海每天增加的数字，看看《上海发布》微信公众号聊以慰藉<br>
渐渐有人开始逃离上海，徒步去火车站和机场；更多人被转移去了方舱，睡在地板上······<br>
这场运动一直持续到 8 月初，南浦大桥终于又有了车流，可上海再也不是<strong>精神上海人</strong>心中的上海了</p>
<p>再后来外婆离世，一行人坐救护车从浙江到了安徽<br>
她去世前几天还多次说谢谢我照顾她，胰岛素注射笔我已经可以很熟练地使用了<br>
只是我觉得中式葬礼难免有些太过复杂了，锣鼓喧天又休息不好，还要跋山涉水<br>
外婆去世后，关于遗产问题又是一些摩擦；却没人关心外婆家里的相册，最后记录着外公外婆一家的相册也不知道被丢到哪个角落</p>
<p>小城的生活成本不算高，但也不低<br>
一份老娘舅的午饭如果只单点“鱼香肉丝”和“白米饭”，可以被压缩到 10 元，还有免费的一杯大麦茶赠送；如果要点套餐，就要 30 元，因为加上了带银鱼的水蒸蛋，两块蒸饺和一碟小菜；有意思的是，老娘舅所有的套餐价格和单点没有任何区别，也即是套餐无优惠<br>
除了吃，我在小城里几乎没有别的消费，我去的场所几乎只需要支付免费的“浙江健康码”和“国务院行程码”，健康码里的核酸检测必须是三天以内。这当然不是什么大问题，毕竟就和商场门口的保安所说的，核酸检测又不需要钱，而且到处都有</p>
<p>和我妈的争吵不休但没有什么大矛盾<br>
我的作息因为玩 VRchat 的原因，时区向西移动了一些。但最近已经不太沉迷 VRchat 了，作息也在慢慢调整。我考上大学的时候，我妈可以在给定一所大学名称的情况下，断言这所大学是 985 还是 211 ；现在我妈自发地开始了解世界其他的大学，周边发达国家 / 地区的大学，她能迅速判断 国立 / 公立 / 私立，然后教育我不能躺平<br>
有天晚上我妈指着手机上的抖音中介说：这个咨询的人懂的还没我多<br>
至于我爸，他在二十大前买入了股票，可想又是亏损的</p>
<p>花了好多时间的 VRchat，认识了不同的朋友们，有些不再联系，有些加了微信，有些对我信任，有些杳无音讯，有些伸出援手</p>
<p>自己要选怎么样的路只有自己知道，<br>
反正我是没搞清楚</p>
<p>于中华人民共和国浙江省境内<br>
二零二二年拾月贰拾陆日 午夜</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[iTunes 家庭媒体]]></title>
        <id>https://wushuo.me/post/iTunesHomeShare/</id>
        <link href="https://wushuo.me/post/iTunesHomeShare/">
        </link>
        <updated>2021-07-20T07:54:47.000Z</updated>
        <summary type="html"><![CDATA[<p>流式传输定义很广泛，主要指通过网络传送流媒体 ( 如视频，音频 ) 的技术总称。其特定含义为通过网络将影视节目传送到终端。为了通过 Wi-Fi 传输数字音乐，AirPlay 使用 RTSP 协议，即实时流协议。Apple Lossless 音频编解码器以 44100Hz 的速度传输两个音频通道。</p>
]]></summary>
        <content type="html"><![CDATA[<p>流式传输定义很广泛，主要指通过网络传送流媒体 ( 如视频，音频 ) 的技术总称。其特定含义为通过网络将影视节目传送到终端。为了通过 Wi-Fi 传输数字音乐，AirPlay 使用 RTSP 协议，即实时流协议。Apple Lossless 音频编解码器以 44100Hz 的速度传输两个音频通道。</p>
<!-- more -->
<p>请注意，本文会出现数张较高分辨率照片，它们或为 1280x720 webp 格式，为了确保图片可以被正常加载，你需要确认以下事项：</p>
<ul>
<li>能够正常访问 <a href="https://github.com">Github</a> 且能够透过 jsDelivr 以正常速度加载图片</li>
<li>你的设备或浏览器要求兼容 webp 格式的图像，这里特指 Apple 设备及 Safari 浏览器。Safari 浏览器需要更新至支持 webp 的版本，通常来说需要 iOS 14 以上的 iOS 设备或 macOS 11 Big Sur 以上且已经更新至最新 Safari 的 Mac 设备</li>
<li>若满足以上两项仍然出现图片加载缓慢，请耐心等待，全站已开启惰性加载 ( Lazy Loading )</li>
</ul>
<h3 id="目录">目录</h3>
<ul>
<li><a href="#airplay-%E4%BB%8B%E7%BB%8D">Airplay 介绍</a></li>
<li><a href="#itunes-%E8%B5%84%E6%96%99%E5%BA%93%E6%9E%84%E5%BB%BA">iTunes 家庭资料库构建</a></li>
<li><a href="#itunes-%E8%B5%84%E6%96%99%E5%BA%93%E6%95%B4%E7%90%86">iTunes 家庭资料库整理</a></li>
<li><a href="#%E5%BD%B1%E7%89%87%E6%B7%B7%E6%B5%81%E5%89%AA%E8%BE%91%E4%BF%AE%E6%94%B9%E5%AD%97%E5%B9%95">影片混流剪辑修改字幕</a></li>
<li><a href="#%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE%E6%96%B9%E6%A1%88">个人配置方案</a></li>
<li><a href="#%E7%BB%93%E5%B0%BE">结尾</a></li>
</ul>
<h3 id="airplay-介绍">Airplay 介绍</h3>
<p>Airplay 是 Apple 的私有协议，可以使得媒体在 iOS 和 macOS 设备之间流转，同时可以传输媒体的元数据，如封面，艺人，类型，分类等</p>
<p>Airplay 在简体中文系统中被翻译为了隔空播放，可以在 iOS 和 macOS 的控制中心打开，同时本文所介绍的基于 iTunes 的家庭媒体系统也是通过 Airplay 流转至播放终端</p>
<p>Airplay 工作原理为在发射端 ( 如 Mac 或 iPhone ) 将流媒体加密，通过 RTSP 协议与接收端握手，将流媒体传输到接收端 ( 通常是 Apple TV 和 HomePod ) 进行硬解码和播放<sup>1</sup></p>
<p>显然，Airplay 的传输速度取决于局域网的网速，当然也受限于发射端与接收端的速度，如果局域网内基于 RTSP 协议的速度无法到达视频的码率，观影体验将会糟糕<br>
这里以《普罗米亚》这部影片为例，音频视频总比特率为 13003kbps，这意味着在 RTSP 协议下需要至少 14Mbps 的速度提供较为流畅的播放体验，即我们日常所说的 14M 宽带，但由于 RTSP 协议本身速度并不能达到峰值网速以及 Airplay 协议由多个不同协议构成，建议的网速被要求在 50Mbps 以上</p>
<p>本文中，我们以 Mac 或 PC 作为发射端，iPhone，iPad，Apple TV 作为接收端</p>
<h3 id="itunes-资料库构建">iTunes 资料库构建</h3>
<p>为了得以构建在局域网络运行良好的 iTunes 资料库以便流式传输</p>
<ul>
<li>发射端 ( 即存储影片的设备 ) 为一台 Mac 或 PC，并且安装了较新的操作系统和 iTunes</li>
<li>接收端 ( 即用来观看影片的设备 ) 应该为 Apple 设备 ( 如 Apple TV，iPhone，iPad，Mac )，即使 PC 版 iTunes 也能观看，但体验糟糕</li>
<li>局域网络速度至少应该在 50Mbps 以上</li>
</ul>
<p>如果使用 PC 构建 iTunes 资料库，参考：<br>
<a href="https://support.apple.com/zh-cn/guide/itunes/itns41350225/windows">通过 PC 上 iTunes 中的“家庭共享”将内容流化到 Apple TV</a><sup>2</sup></p>
<p>如果通过 Mac 上的 iTunes Store 构建 iTunes 资料库 ( 通常为 Mac OS X Lion 至 macOS Mojave )，参考：<br>
<a href="https://support.apple.com/zh-cn/guide/tv/atvbc876df1e/tvos">配置运行 macOS Mojave 及更早版本的 Mac，或者 Windows PC：在 iTunes 中，前往“文件”&gt;“家庭共享”，然后选取“打开家庭共享”。输入您的 Apple ID 和密码，然后点按“打开家庭共享”</a><sup>3</sup></p>
<p>如果通过 Mac 上的 Apple Music App 以及 Apple TV App 构建 iTunes 资料库 ( macOS Catalina 及之后版本 )，参考：<br>
<a href="https://support.apple.com/zh-cn/HT202190">使用“家庭共享”将媒体从电脑共享到其他设备</a><sup>4</sup></p>
<p>请注意，无论使用哪一种方法构建 iTunes 资料库，发射端与接收端都必须处在同一网络下，并且登录相同的 Apple ID</p>
<h3 id="itunes-资料库整理">iTunes 资料库整理</h3>
<p>Apple 官方给出了<a href="https://support.apple.com/zh-cn/guide/tvapp-mac/atvbe9ddc3f/1.1/mac/11.0">如何在 Apple TV App 中整理 iTunes 资料库</a>，但并未给出细节</p>
<p>这里本文给出如何对<strong>元数据</strong> ( <em>metadata</em> ) 进行管理，包括 iTunes 资料库如何透过元数据自动管理分类<br>
以 Apple TV App / macOS Catalina 为例</p>
<p>请注意，Apple TV App 或 iTunes 会询问是否将流媒体整齐有序的排列，其本质是建立单独的文件夹“媒体”，并将拖入 Apple TV App ( 或 iTunes ) 或 使用 Apple TV App ( 或 iTunes ) 添加的本地媒体<strong>复制</strong>到“媒体”文件夹中。同时，这意味着 Apple TV App ( 或 iTunes ) 对“媒体”文件夹拥有<strong>完全读写权力</strong>，这一点非常重要</p>
<h4 id="导入流媒体">导入流媒体</h4>
<p>要想导入流媒体进入资料库，只需要拖入流媒体文件至  Apple TV App ( 或 iTunes ) ，App 会自动将流媒体文件复制到 App 目录下 ( 一般为“媒体”或 “iTunes”)<br>
<img src="https://wushuo.me/post-images/1627010596998.webp" alt="" loading="lazy"></p>
<h4 id="分类流媒体">分类流媒体</h4>
<p>点击媒体的 更多信息-显示简介-选项，即可开始分类，通常分类选项为三种：影片，电视剧，家庭视频</p>
<ul>
<li>影片一般为单集流媒体，如电影，纪录片</li>
<li>电视剧一般为多集流媒体如，如动画番剧，电视连续剧</li>
<li>家庭视频一般为自己拍摄的生活视频</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://wushuo.me/post-images/1627014602113.webp" alt="" loading="lazy"></figure>
<h4 id="为流媒体设置详细信息即元数据">为流媒体设置详细信息即元数据</h4>
<p>电视剧的设置选项最多且复杂，这里以电视剧为例：</p>
<ul>
<li>标题：本集电视剧的标题，并非电视剧总标题，如第 114514 集标题《你怎么穿着品如的衣服》</li>
<li>节目：电视剧的总标题，如《回家的诱惑》，同一部电视剧每一集的节目应该设置为一样，资料库会将其自动归档到同一电视剧节目下</li>
<li>季：英语 Season 的翻译，国内电视剧很少有“季”的概念，这里也指代第几部，如《爱情公寓 4》就是第 4 季</li>
<li>剧集：本集电视剧在本季中属于第几集，如如《爱情公寓 2》第 1 集的剧集是 1</li>
<li>剧集 ID：本集电视剧在整个系列中的ID，如《爱情公寓 2》第 1 集的剧集 ID 是 53 ( 第一季为 52 集 )</li>
<li>发布日期：本集电视剧的发布日期</li>
<li>归类：自己定义的类</li>
<li>类型：如群像，爱情，动作，爱情动作等等，自己定义即可选择归类，比“归类”更加实用</li>
<li>年份：该季发布的年份</li>
</ul>
<p>请注意，iTunes 资料库主要通过<strong>元数据</strong> ( <em>metadata</em> ) 进行自动归档，在电视剧设置中，切勿将标题与节目设置错误 ( 例如每一集设置重复的标题而非重复的节目 )，由于资料库对其“媒体”文件夹有<strong>完全读写权力</strong>，“媒体”文件夹内的流媒体文件可能会被自动<strong>覆盖</strong> ( <em>overwrite</em> )，导致珍贵的流媒体文件丢失</p>
<figure data-type="image" tabindex="2"><img src="https://wushuo.me/post-images/1627014607595.webp" alt="" loading="lazy"></figure>
<h3 id="影片混流剪辑修改字幕">影片混流剪辑修改字幕</h3>
<p>在 Apple 设备上，mp4 / m4v 格式才能够被原生播放，而 mkv 格式则需要被第三方播放器播放<br>
在 iOS / Mac 设备上，我们可以轻松安装第三方播放器，例如 <a href="https://apps.apple.com/us/app/aplayer-alook-player/id1420356569">Avplayer</a> / <a href="https://iina.io/">IINA</a>，但对于 Apple TV ( 特别是 Apple TV 2 和 Apple TV 3 )，无法识别 iTunes 资料库的 mkv 格式流媒体，在这里对格式转换做简略介绍</p>
<p>在这里我们只讨论对于关键帧操作的<strong>无损</strong> ( <em>Lossless</em> ) 分割和转换，目前主要流行的工具为 <strong>ffmpeg</strong></p>
<ul>
<li>调用 ffmpeg 进行流媒体容器转换，速度快且无损，如将 mkv 快速转换为 mp4，对于电影来说通常只需数秒</li>
<li>使用开源跨平台软件 LosslessCut 进行操作，LosslessCut 完全支持 ffmpeg，并且带有友好的图形界面和剪辑轨道</li>
</ul>
<p>对于流媒体字幕，我们可能需要对字幕文件进行修改，这里使用 <strong>gMKVExtractGUI</strong> 进行视频，音频和字幕的分离，使用文本编辑器 ( 如 VScode ) 对字幕进行修改，再使用 <strong>MKVTool</strong> 进行混流，得到封装完成的 mkv 格式的流媒体文件</p>
<h3 id="个人配置方案">个人配置方案</h3>
<p>我将 Mac mini 2014 作为发射端，将我的资料库存储在其中并开启资料库家庭共享，使用 Apple TV 3 作为接受端，只需要将 Mac mini 2014 全天运行 ( Mac 可以全天工作 )，就可以随时打开电视观看 Mac mini 硬盘内的影片<br>
同时，我的另一台 Mac，iPhone，iPad 也能在任何时候访问资料库内的影片</p>
<h3 id="结尾">结尾</h3>
<p>从网络上下载影片，番剧，或是电视连续剧，仅供个人交流学习使用，属于版权问题的灰色地带<br>
如果经济条件允许，选择如 <a href="https://www.netflix.com/">Netflix</a> 的平台在线观看更好</p>
<p>文献参考</p>
<ul>
<li>[1]  维基百科：<a href="https://en.wikipedia.org/wiki/AirPlay">AirPlay is a proprietary wireless communication protocol stack/suite developed by Apple Inc. that allows streaming between devices of audio, video, device screens, and photos, together with related metadata.</a></li>
<li>[2] Apple iTunes 使用手册：<a href="https://support.apple.com/zh-cn/guide/itunes/itns41350225/windows">通过 PC 上 iTunes 中的“家庭共享”将内容流化到 Apple TV</a></li>
<li>[3] Apple TV 使用手册：<a href="https://support.apple.com/zh-cn/guide/tv/atvbc876df1e/tvos">在 Apple TV 上使用家庭共享流化内容</a></li>
<li>[4] Apple Support：<a href="https://support.apple.com/zh-cn/HT202190">使用“家庭共享”将媒体从电脑共享到其他设备</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[转换器]]></title>
        <id>https://wushuo.me/post/LongLifeEvolution/</id>
        <link href="https://wushuo.me/post/LongLifeEvolution/">
        </link>
        <updated>2021-06-23T15:07:03.000Z</updated>
        <summary type="html"><![CDATA[<p>怎样过完普通的一生 / converter</p>
]]></summary>
        <content type="html"><![CDATA[<p>怎样过完普通的一生 / converter</p>
<!-- more -->
<p>高中的时候听过学物竞拿奖的同学念的一篇小作文，叫“接受自己的平凡”，那个时候我还不知道其中话的含义；后来他没学物理了，去了浙大的城乡规划</p>
<p>现在我在二本学校学着和物理擦边的电子信息，囿于数学的含义里，写着后半生打算怎么过</p>
<p>我小时候就喜欢研究电子产品 ( 准确来说是喜欢拆解 )，大学读了电子信息发现并不太一样。家里希望继续读下去，我自己没什么想法，想读完书就回到小县城过完一生</p>
<p>有许多人在不同年龄喜欢收集不同东西，比如兼容多种协议的充电器，各种存储设备，古董键盘，CRT显示器等等</p>
<p>我从高中开始迷上了接口转换器，那个时候收集了 MicroUSB to Type-C，Type-A to 3.5mm Jack， OTG，DVI to DP 等等转换器；拥有各式各样的转换器一直是我的梦想，比如不会为了打印文件而折腾蓝牙，直接可以用 Type-A to Type-B 线缆高速传输数据，还能支持热插拔</p>
<p>大二的寒假在家度过，我给家中添置了一台<a href="https://wushuo.me/post/aboutOpenwrt/">十年前旧电脑改装的软路由</a>，我不仅用它连上了喇叭实现了林檎设备的 Airplay，也将它作为存储设备观看视频和电影，让家中父母购置的 4K 装饰品电视发挥了作用。我在寒假中的娱乐主要来自于折腾这些东西本身，而并非折腾完之后的享受。折腾这些东西学到的大学远没有大学一门课 ( 或者说是有一科考试逼迫我学习 ) 获得的知识多，但我不会感到厌倦，相反乐在其中。我不爱争斗，从小的家庭教育也不是让我超过别人，实现别人已经实现的东西也会让我感到充实 ( 事实上我并无任何创新 )。</p>
<p>倘若几年后，我在正常作息之余能收集我喜爱的接口转换器 ( 真期待那时 USB 的形状是否能改变，抑或有更多接口样式出现 ) ，可以在闲暇时间看自己改完字幕混流后的电影，这样的人生对现在的我来说就是圆满的。至于娘子，孩子，房子和车子则都不在必要的考量范围内，票子只要能在亲人生病时能够承担医疗费用就足够了 ( 也即是“钱在救命时才是最重要的” )</p>
<p>于北京林业大学<br>
二〇二壹年陆月贰拾肆日 凌晨</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vim 首行乱码问题解决方法]]></title>
        <id>https://wushuo.me/post/VimRenderIssue/</id>
        <link href="https://wushuo.me/post/VimRenderIssue/">
        </link>
        <updated>2020-12-08T10:59:17.000Z</updated>
        <summary type="html"><![CDATA[<p>在使用 Vim 时遇到了首行乱码形如&quot;+q436f+q6b75+q6b64&quot;，错误的乱码“掩盖”了正确的内容，却不会覆盖正确的内容，但能够导致首行的内容无法被查看，解决这项问题的方法是在 &quot;.vimrc&quot; 文件中添加 &quot;set t_RV=&quot; 确保 Vim 能够显示正确的内容。</p>
]]></summary>
        <content type="html"><![CDATA[<p>在使用 Vim 时遇到了首行乱码形如&quot;+q436f+q6b75+q6b64&quot;，错误的乱码“掩盖”了正确的内容，却不会覆盖正确的内容，但能够导致首行的内容无法被查看，解决这项问题的方法是在 &quot;.vimrc&quot; 文件中添加 &quot;set t_RV=&quot; 确保 Vim 能够显示正确的内容。</p>
<!-- more -->
<ul>
<li><a href="#%E9%97%AE%E9%A2%98%E5%A4%8D%E7%8E%B0">问题复现</a></li>
<li><a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">解决方案</a></li>
<li><a href="#%E5%BC%95%E7%94%A8%E8%B5%84%E6%96%99">引用资料</a></li>
<li><a href="#%E4%B8%80%E7%82%B9%E7%82%B9%E6%83%B3%E8%AF%B4%E7%9A%84%E8%AF%9D">想说些话</a></li>
</ul>
<hr>
<h3 id="问题复现">问题复现</h3>
<p>在我的 <strong>Linux</strong> 虚拟机 (<strong>WSL</strong>) 上运行 Vim 时总会在第一行出现一行乱码，在多次重装 Vim 无果后，终于在 Github 的 <a href="https://github.com/vercel/hyper"><strong>Hyper</strong></a> 项目上找到<a href="https://github.com/vercel/hyper/issues/1037"><strong>答案</strong></a>。</p>
<p># 我的配置</p>
<table>
<thead>
<tr>
<th>系统</th>
<th>Vim</th>
<th>Shell</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ubuntu 18.04 LTS</td>
<td>Vim 8.0</td>
<td>zsh with oh-my-zsh</td>
</tr>
</tbody>
</table>
<p>目前已知的其他系统可能会存在相同的 Vim 问题：<br>
<strong>OS X</strong> 10.12 (Sierra)<br>
<strong>Arch Linux</strong></p>
<p>在 <strong>WSL</strong> 上使用 Vim 后 (无论是否打开文件)，第一行会出现一行显示乱码，亦或称为<code>Broken first line rendering in VIM</code> (引用自 Github issues)<br>
<img src="https://wushuo.me/post-images/1609991249302.webp" alt="vim with render issues" loading="lazy"><br>
形如<code>+q436f+q6b75+q6b64</code>这种乱码仅能通过<kbd>Ctrl + L</kbd>消除。</p>
<hr>
<h3 id="解决方案">解决方案</h3>
<p>在 Terminal 内编辑 <code>.vimrc</code> 文件，并添加<code>set t_RV=</code>。</p>
<pre><code class="language-bash"># wushuo @ DESKTOP-91UDQ1D in ~ [19:29:21] C:1
$ vim ~/.vimrc
</code></pre>
<pre><code class="language-javascript">set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8
set fencs=utf-8,gbk

### 设置下面这条的配置哦
set t_RV=
### 设置上面这条的配置哦

call plug#begin('~/.vim/plugged')
Plug 'dense-analysis/ale'
call plug#end()         
</code></pre>
<p>再次打开 Vim，发现首行的渲染错误已经消失了。</p>
<hr>
<h3 id="引用资料">引用资料</h3>
<p><strong>Hyper</strong> 项目下的 <strong>Github issues</strong> ：<br>
<a href="https://github.com/vercel/hyper/issues/1037">Broken first line rendering in VIM (parseUntilStringTerminator_ aborts) #1037</a></p>
<hr>
<h3 id="一点点想说的话">一点点想说的话</h3>
<p>一篇博客读起来的时间很短，特定内容的博客受众面少，写起来却异常花费时间。<br>
驱使我写博客的目的是我能够静下心来思考，文字想要精炼，磨难也要经历。临近期末考试和四级考试，博客终于被捡起来写了一篇，维护了一下两个托管在 Github 上的静态站点，如果有时间，还能趁机打开一下 Gittalk 评论 (虽然我知道我的博客无人评论)。</p>
<p>在北林的大二半年，过的很累，也并不充实，前几周看了 <a href="https://linghao.io">linghao</a> 的博客，发现自己消磨在不必要的事物上的时间太多了。来北京高铁上的写了一半的博客一直搁浅了，卸了知乎，闲来刷刷推特。看着手机的使用时间记录后，推特确实比知乎对时间和思维消耗比知乎少太多了。</p>
<p>电子系明显比车辆系卷太多了，课程难且不说，精力的消耗难以避免，老师们似乎都沉浸在：“这门课这么难，我教的不错，很有深度，所以学生们收获许多”的幸福里。而我感到的只有 <strong>Push</strong> 。抛开一小部分做硬件的同学来说，学这么多门知识杂碎，耗费精力极高的高难度课程，是将试错成本拉低许多。一本 <strong>CSAPP</strong> 或是 一本 <strong>Algorithm</strong> 的时间就被浪费在”这门课好难，我要挂科了，得好好学习刷题“的时间里了。</p>
<p>或许是我的时间没有被好好利用，又或许是电子系本身就要天天熬夜刷题才能通过，我对数电，模电和电分真的没什么感觉。相反，<strong>Rust</strong> 和 <strong>Apple GSX 认证</strong> 已经被我加入了提醒事项。我只想做个平凡人，或许平庸人也适合我。</p>
<p>博客还得坚持写，英语也得坚持学，考试也得去考考。</p>
<p>写于<br>
模电考试前两天/四级考试前四天<br>
北京林业大学 学12号楼</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[集成电路封装方式简介]]></title>
        <id>https://wushuo.me/post/packagefunction/</id>
        <link href="https://wushuo.me/post/packagefunction/">
        </link>
        <updated>2020-08-24T15:02:31.000Z</updated>
        <summary type="html"><![CDATA[<p>本文主要介绍现代半导体行业<strong>芯片</strong>主要的封装方式。</p>
]]></summary>
        <content type="html"><![CDATA[<p>本文主要介绍现代半导体行业<strong>芯片</strong>主要的封装方式。</p>
<!-- more -->
<h3 id="dip-封装"># <strong>DIP</strong> 封装</h3>
<ul>
<li>Dual Inline Package 即<strong>双列直插封装</strong></li>
<li>在没有在线编程时代，便于烧录</li>
<li>现在较多用于单片机 MCU</li>
</ul>
<h4 id="方向和引脚编号">方向和引脚编号</h4>
<ul>
<li>当元件的识别缺口朝上时，左侧最上方的引脚为引脚1，其他引脚则以逆时针的顺序依序编号。有时引脚1也会以圆点作为标示。</li>
</ul>
<h3 id="pga-封装"># <strong>PGA</strong> 封装</h3>
<ul>
<li>Pin Grid Array 即<strong>插针网格阵列</strong></li>
<li>PGA封装一般是将集成电路（IC）焊接在一块电路板上，电路板的另一面是排列成方阵的插针</li>
<li>插针可以插入或焊接到其他电路板上对应的插座中，适合于需要频繁插拔的场合</li>
</ul>
<h4 id="用途">用途</h4>
<ul>
<li>intel早期处理器曾使用PGA封装，如 <a href="https://zh.wikipedia.org/wiki/%E5%A5%94%E8%85%BE4">Intel Pentium 4</a> with 1.4 Ghz 1 Core 1 Thread</li>
<li><a href="https://www.amd.com/en">AMD</a> 的绝大部分桌面级CPU采用PGA封装，仅有Ryzen Threadripper系列及服务器的EPYC等少量CPU为LGA封装。</li>
</ul>
<h3 id="bga-封装"># <strong>BGA</strong> 封装</h3>
<ul>
<li>Ball Grid Array 即<strong>球栅阵列封装</strong></li>
<li>BGA封装常用来永久性固定如微处理器之类的的装置</li>
<li>BGA封装能提供比其他如<strong>双列直插封装</strong>或<strong>四侧引脚扁平封装</strong>所容纳更多的接脚</li>
<li>BGA封装技术提供<strong>低电感引脚</strong>，在封装与PCB之间的距离非常短，有了低电感引脚，相较于针脚装置能有更优异的电子特性</li>
</ul>
<h4 id="用途-2">用途</h4>
<ul>
<li>绝大多数笔记本电脑都采用BGA封装</li>
</ul>
<h3 id="lga-封装"># <strong>LGA</strong> 封装</h3>
<ul>
<li>Land Grid Array 即<strong>平面网格阵列封装</strong></li>
<li>LGA封装的特点在于其针脚是位于插座上而非集成电路上。LGA封装的芯片能被连接到印刷电路板（PCB）上或直接焊接至电路板上</li>
<li>LGA封装与传统针脚在集成电路上的封装方式相比，可减少针脚损坏的问题并可增加脚位</li>
</ul>
<h4 id="用途-3">用途</h4>
<ul>
<li>Intel 的绝大多数桌面级处理器均采用LGA封装</li>
<li>AMD 和 IBM 也曾采用过LGA封装，如 AMD 的 Socket TR4 (Zen2) 和 IBM 的 Power 8</li>
</ul>
<h3 id="plcc-封装-即-塑料芯片载体"># <strong>PLCC</strong> 封装 即 塑料芯片载体</h3>
<ul>
<li>Plastic Leaded Chip Carrier</li>
<li>PLCC封装在正方形的封装四边都有接脚，相比起其内部用来挂载集成电路的空腔来，整个封装所占体积较大</li>
<li>PLCC封装为32引脚</li>
</ul>
<h3 id="mcm-封装"># <strong>MCM</strong> 封装</h3>
<ul>
<li>Multi-Chip Module 即<strong>多芯片模组</strong></li>
<li>在MCM未发创前，一个封装内多半只有一个裸晶</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hackintosh on intel G41 with 775/771 CPU]]></title>
        <id>https://wushuo.me/post/hackintosh/</id>
        <link href="https://wushuo.me/post/hackintosh/">
        </link>
        <updated>2020-08-23T11:03:45.000Z</updated>
        <summary type="html"><![CDATA[<p>A Hackintosh is a computer that runs an Apple Macintosh operating system on computer hardware not authorized for the purpose by Apple. This passage is to introduce using intel G41 series motherboard hackintosh on a low budget.</p>
]]></summary>
        <content type="html"><![CDATA[<p>A Hackintosh is a computer that runs an Apple Macintosh operating system on computer hardware not authorized for the purpose by Apple. This passage is to introduce using intel G41 series motherboard hackintosh on a low budget.</p>
<!-- more -->
<h3 id="showing"># <strong>Showing</strong></h3>
<figure data-type="image" tabindex="1"><img src="https://wushuo.me/post-images/1609988673599.webp" alt="Glance" loading="lazy"></figure>
<h3 id="system-configuration"># <strong>System Configuration</strong></h3>
<table>
<thead>
<tr>
<th>Parts</th>
<th>Type</th>
</tr>
</thead>
<tbody>
<tr>
<td>Model in Clover Config</td>
<td>iMac14, 2</td>
</tr>
<tr>
<td>CPU</td>
<td>Intel Xeon L5420 2.5Ghz with 4 Cores 4 Threads</td>
</tr>
<tr>
<td>Motherboard</td>
<td>AUSU P5G41T-M LX V2</td>
</tr>
<tr>
<td>Graphics</td>
<td>Pegatron GeForce 310 512 MB HDMI/DVI</td>
</tr>
<tr>
<td>Disk</td>
<td>Teclast SSD 128GB SATA</td>
</tr>
<tr>
<td>Memory</td>
<td>1333MHz DDR3 2x2G</td>
</tr>
<tr>
<td>Display</td>
<td>Philips 32PFL3040 1360x768 HDMI</td>
</tr>
<tr>
<td>Audio</td>
<td>SANSUI with Green Rear Line-out</td>
</tr>
</tbody>
</table>
<h3 id="performance"># <strong>Performance</strong></h3>
<ul>
<li><a href="https://geekbench.com">Geekbench 5</a>: Single-Core Score 380 / Multi-Core Score 1283</li>
<li>Browser website and Code fluently with 2 x 6MB L2 Cache</li>
<li>Can not be used as video-editing or render</li>
</ul>
<h3 id="build"># <strong>Build</strong></h3>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9495819"><label class="task-list-item-label" for="task-item-9495819"> wakeup success</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2101468"><label class="task-list-item-label" for="task-item-2101468"> resolution success HDMI/DVI both  can be line-out</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3121935"><label class="task-list-item-label" for="task-item-3121935"> audio line-out success in Green Rear and Headphones</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5069068"><label class="task-list-item-label" for="task-item-5069068"> ethernet conect  stably</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7161518"><label class="task-list-item-label" for="task-item-7161518"> iCloud and Appstore replaced SMBIOS</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1440552"><label class="task-list-item-label" for="task-item-1440552"> Power-on without USB Sticker</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3186323"><label class="task-list-item-label" for="task-item-3186323"> wireless and bluetooh</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-32196"><label class="task-list-item-label" for="task-item-32196"> USB 3.0 port which can be installed through PCIE x1</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1893103"><label class="task-list-item-label" for="task-item-1893103"> microphone</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6204278"><label class="task-list-item-label" for="task-item-6204278">  Airdrop and Handoff</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8883906"><label class="task-list-item-label" for="task-item-8883906">  iMessage, Facetime and iTunes can not login</label></li>
</ul>
<h3 id="about-boot"># <strong>About Boot</strong></h3>
<blockquote>
<p><strong>Attention</strong>: if you can have a mac in any way you should install MacOS on your PC through <strong><a href="https://unibeast.com">Unibeast</a></strong></p>
</blockquote>
<p>The way I'll introduce worked successfully in any old <a href="https://en.wikipedia.org/wiki/Master_boot_record">MBR</a> PC</p>
<h4 id="boot-workflow"><strong>boot workflow</strong></h4>
<p>MBR simulate UEFI ( EFI in Disk ) &gt; enter UEFI Boot &gt; enter Clover Boot ( ESP in MacOS ) &gt; MacOS</p>
<h4 id="mbr-simulate-uefi-achievement"><strong>MBR simulate UEFI achievement</strong></h4>
<ol>
<li>Part 500 MB FAT32 disk0 as <strong>EFI Partition</strong> from boot disk</li>
<li>Active the <strong>EFI Partition</strong> to allow MBR Boot</li>
<li>Use <strong>BOOTICE</strong> to simulate UEFI
<ol>
<li><strong>MBR Repair</strong> disk0:usr/standalone/i386/<strong>boot0af</strong> to your <strong>boot disk</strong></li>
<li><strong>PBR Repair</strong> disk0:usr/standalone/i386/<strong>boot1f32alt</strong> to <strong>EFI Partition</strong></li>
</ol>
</li>
<li>Until now your MBR PC is able to simulate UEFI</li>
</ol>
<h3 id="install-macos"># <strong>Install macOS</strong></h3>
<h4 id="known"><strong>Known</strong></h4>
<ul>
<li>The macOS version is decided by your PC parts, mostly decided by Graphics</li>
<li>U Disk is more realiable than writing to disk directly</li>
</ul>
<h4 id="install-important-points"><strong>Install important points</strong></h4>
<ul>
<li>Xeon CPU ( Particularly 771 socket <strong>trans to</strong> 775 socket ) need to add boot args: <strong>npci=0x3000</strong></li>
<li>Nvdia GT 210/GT 310 ( 512 MB / 1024 MB ) is able to be drived by macOS natively and it's the cheapest Graphics</li>
<li>If <a href="https://www.apple.com/macos/catalina/">macOS Catalina</a> are wished to be installed, the <strong>Kepler</strong> Nvdia Graphics is a good choice
<ul>
<li>Recommanded Graphics Dell Nvdia GeForce 640 1024 MB with DP/HDMI/DVI</li>
</ul>
</li>
<li>G41 series motherboard or inetl 775 CPU only support 1333 DDR3 4G <strong>double-sided</strong> Memory and maximum 8G Memory</li>
<li>Motherboard from Gigabyte/AUSU/MSI match the macOS better ( Gigabyte the best )</li>
</ul>
<h3 id="ending"># <strong>Ending</strong></h3>
<p>Thank u guys who've read patiently, hope u hack successfully!</p>
<h3 id="more-info-about-hackintosh"># More info about <strong>hackintosh</strong></h3>
<p>wiki: <a href="https://en.wikipedia.org/wiki/Hackintosh">what is hackintosh</a><br>
Github: <a href="https://github.com/daliansky/Hackintosh">hackintosh model collection</a><br>
tonymacx86: <a href="https://en.wikipedia.org/wiki/Hackintosh">guide and forum of hackintosh</a><br>
Opencore: <a href="https://khronokernel-2.gitbook.io/opencore-vanilla-desktop-guide/">brand new boot</a></p>
]]></content>
    </entry>
</feed>